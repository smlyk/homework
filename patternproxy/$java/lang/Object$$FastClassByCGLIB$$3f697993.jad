// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   <generated>

package $java.lang;

import java.lang.reflect.InvocationTargetException;
import org.springframework.cglib.core.Signature;
import org.springframework.cglib.reflect.FastClass;

public class Object$$FastClassByCGLIB$$3f697993 extends FastClass
{

    public int getIndex(Signature signature)
    {
        String s = signature.toString();
        s;
        s.hashCode();
        JVM INSTR lookupswitch 3: default 74
    //                   1826985398: 44
    //                   1913648695: 54
    //                   1984935277: 64;
           goto _L1 _L2 _L3 _L4
_L2:
        "equals(Ljava/lang/Object;)Z";
        equals();
        JVM INSTR ifeq 75;
           goto _L5 _L6
_L6:
        break MISSING_BLOCK_LABEL_75;
_L5:
        return 0;
_L3:
        "toString()Ljava/lang/String;";
        equals();
        JVM INSTR ifeq 75;
           goto _L7 _L8
_L8:
        break MISSING_BLOCK_LABEL_75;
_L7:
        return 1;
_L4:
        "hashCode()I";
        equals();
        JVM INSTR ifeq 75;
           goto _L9 _L10
_L10:
        break MISSING_BLOCK_LABEL_75;
_L9:
        return 2;
_L1:
        JVM INSTR pop ;
        return -1;
    }

    public int getIndex(String s, Class aclass[])
    {
        s;
        aclass;
        JVM INSTR swap ;
        JVM INSTR dup ;
        hashCode();
        JVM INSTR lookupswitch 3: default 158
    //                   -1776922004: 40
    //                   -1295482945: 74
    //                   147696667: 124;
           goto _L1 _L2 _L3 _L4
_L2:
        "toString";
        equals();
        JVM INSTR ifeq 159;
           goto _L5 _L6
_L6:
        break MISSING_BLOCK_LABEL_162;
_L5:
        JVM INSTR dup ;
        JVM INSTR arraylength .length;
        JVM INSTR tableswitch 0 0: default 71
    //                   0 68;
           goto _L7 _L8
_L7:
        break MISSING_BLOCK_LABEL_162;
_L8:
        JVM INSTR pop ;
        return 1;
_L3:
        "equals";
        equals();
        JVM INSTR ifeq 159;
           goto _L9 _L10
_L10:
        break MISSING_BLOCK_LABEL_162;
_L9:
        JVM INSTR dup ;
        JVM INSTR arraylength .length;
        JVM INSTR tableswitch 1 1: default 121
    //                   1 104;
           goto _L11 _L12
_L11:
        break MISSING_BLOCK_LABEL_162;
_L12:
        JVM INSTR dup ;
        0;
        JVM INSTR aaload ;
        getName();
        "java.lang.Object";
        equals();
        JVM INSTR ifeq 162;
           goto _L13 _L14
_L14:
        break MISSING_BLOCK_LABEL_162;
_L13:
        JVM INSTR pop ;
        return 0;
_L4:
        "hashCode";
        equals();
        JVM INSTR ifeq 159;
           goto _L15 _L16
_L16:
        break MISSING_BLOCK_LABEL_162;
_L15:
        JVM INSTR dup ;
        JVM INSTR arraylength .length;
        JVM INSTR tableswitch 0 0: default 155
    //                   0 152;
           goto _L17 _L18
_L17:
        break MISSING_BLOCK_LABEL_162;
_L18:
        JVM INSTR pop ;
        return 2;
_L1:
        JVM INSTR pop ;
        JVM INSTR pop ;
        return -1;
    }

    public int getIndex(Class aclass[])
    {
        aclass;
        aclass.length;
        JVM INSTR tableswitch 0 0: default 23
    //                   0 20;
           goto _L1 _L2
_L2:
        JVM INSTR pop ;
        return 0;
_L1:
        JVM INSTR pop ;
        return -1;
    }

    public Object invoke(int i, Object obj, Object aobj[])
        throws InvocationTargetException
    {
        obj;
        i;
        JVM INSTR tableswitch 0 2: default 59
    //                   0 28
    //                   1 43
    //                   2 47;
           goto _L1 _L2 _L3 _L4
_L2:
        aobj[0];
        equals();
        JVM INSTR new #55  <Class Boolean>;
        JVM INSTR dup_x1 ;
        JVM INSTR swap ;
        Boolean();
        return;
_L3:
        toString();
        return;
_L4:
        hashCode();
        JVM INSTR new #60  <Class Integer>;
        JVM INSTR dup_x1 ;
        JVM INSTR swap ;
        Integer();
        return;
        JVM INSTR new #53  <Class InvocationTargetException>;
        JVM INSTR dup_x1 ;
        JVM INSTR swap ;
        InvocationTargetException();
        throw ;
_L1:
        throw new IllegalArgumentException("Cannot find matching method/constructor");
    }

    public Object newInstance(int i, Object aobj[])
        throws InvocationTargetException
    {
        JVM INSTR new #13  <Class Object>;
        JVM INSTR dup ;
        i;
        JVM INSTR tableswitch 0 0: default 28
    //                   0 24;
           goto _L1 _L2
_L2:
        Object();
        return;
        JVM INSTR new #53  <Class InvocationTargetException>;
        JVM INSTR dup_x1 ;
        JVM INSTR swap ;
        InvocationTargetException();
        throw ;
_L1:
        throw new IllegalArgumentException("Cannot find matching method/constructor");
    }

    public int getMaxIndex()
    {
        return 2;
    }

    public Object$$FastClassByCGLIB$$3f697993(Class class1)
    {
        super(class1);
    }
}
